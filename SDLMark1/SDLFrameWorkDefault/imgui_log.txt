You can also call ImGui::LogText() to output directly to the log without a visual output.
Copy "Hello, world!" to clipboard

## Window options ##
[ ]
No titlebar [x]
No scrollbar [x]
No menu
[ ]
No move [ ]
No resize [ ]
No collapse
[ ]
No close [ ]
No nav [ ]
No background
[ ]
No bring to front

## Widgets ##
> Basic
    Button
    [x]
    checkbox
    (x)
    radio a ( )
    radio b ( )
    radio c
    Click Click Click Click Click Click Click
    Hold to repeat: 0
    Hover over me - or me
    --------------------------------
    Value
    label
    AAAA combo (?)
    Hello, world! input text (?)
    enter text here input text (w/ hint)
    123 - + input int
    (?)
    0.001 - + input float
    999999.00000001 - + input double
    1.000000e+10 input scientific (?)
    0.100 0.200 0.300 input float3
    50
    drag int (?)
    42%
    drag int 0..100
    1.000
    drag float
    0.006700 ns
    drag small float
    0
    slider int (?)
    ratio = 0.123
    slider float
    0.0000
    slider float (curve)
    0 deg
    slider angle
    Fire
    slider enum (?)
    R:255 G:  0 B: 51
    color 1
    (?)
    R:102 G:179 B:  0 A:128
    color 2
> Trees
    > Basic trees
        > Child 0
            blah blah button
        > Child 1
            blah blah button
        > Child 2
            blah blah button
        > Child 3
            blah blah button
        > Child 4
            blah blah button
    > Advanced, with Selectable nodes
        (?)
        [x]
        ImGuiTreeNodeFlags_OpenOnArrow
        [x]
        ImGuiTreeNodeFlags_OpenOnDoubleClick
        [x]
        ImGuiTreeNodeFlags_SpanAvailWidth
        [ ]
        ImGuiTreeNodeFlags_SpanFullWidth
        [ ]
        Align label with current X position)
        Hello!
        > Selectable Node 0
            Blah blah
            Blah Blah
        > Selectable Node 1
            Blah blah
            Blah Blah
        > Selectable Node 2
            Blah blah
            Blah Blah
        > Selectable Leaf 3
        > Selectable Leaf 4
        > Selectable Leaf 5
> Collapsing Headers
    [x]
    Show 2nd header
    
    ## Header ##
    
    ## Header with a close button ##
> Bullets
    Bullet point 1
    Bullet point 2
    On multiple lines
    > Tree node
        Another bullet point
    Bullet point 3 (two calls)
    Button
> Text
    > Colored Text
        Pink
        Yellow
        Disabled (?)
    > Word Wrapping
        This text should automatically wrap on the edge of the window. The current implementation for text wrapping follows simple rules suitable for English and possibly other languages.
        200
        Wrap width
        Test paragraph 1:
        The lazy dog is a good dog. This paragraph is made to fit within 200 pixels. Testing a 1 character word. The quick brown fox jumps over the lazy dog.
        Test paragraph 2:
        aaaaaaaa bbbbbbbb, c cccccccc,dddddddd. d eeeeeeee   ffffffff. gggggggg!hhhhhhhh
    > UTF-8 Text
        CJK text will only appears if the font was loaded with the appropriate CJK character ranges. Call io.Font->AddFontFromFileTTF() manually to load extra character ranges. Read docs/FONTS.txt for details.
        Hiragana: かきくけこ (kakikukeko)
        Kanjis: 日本語 (nihongo)
        日本語 UTF-8 input
> Images
    Below we are displaying the font texture (which is the only texture we have access to in this demo). Use the 'ImTextureID' type as storage to pass pointers or identifier to your own texture data. Hover the texture for a zoomed view!
    512x64
    And now some textured buttons..
    Pressed 0 times.
> Combo
    [ ]
    ImGuiComboFlags_PopupAlignLeft (?)
    [ ]
    ImGuiComboFlags_NoArrowButton
    [ ]
    ImGuiComboFlags_NoPreview
    AAAA combo 1
    aaaa combo 2 (one-liner)
    combo 3 (array)
    AAAA combo 4 (function)
> Selectables
    > Basic
        1. I am selectable
        2. I am selectable
        3. I am not selectable
        4. I am selectable
        5. I am double clickable
    > Selection State: Single Selection
        Object 0
        Object 1
        Object 2
        Object 3
        Object 4
    > Selection State: Multiple Selection
        (?)
        Object 0
        Object 1
        Object 2
        Object 3
        Object 4
    > Rendering more text into the same line
        main.c  2,345 bytes
        Hello.cpp 12,345 bytes
        Hello.h  2,345 bytes
    > In columns
        Item 0 Item 1 Item 2
        Item 3 Item 4 Item 5
        Item 6 Item 7 Item 8
        Item 9 Item 10 Item 11
        Item 12 Item 13 Item 14
        Item 15
    > Grid
        Sailor Sailor Sailor Sailor
        Sailor Sailor Sailor Sailor
        Sailor Sailor Sailor Sailor
        Sailor Sailor Sailor Sailor
    > Alignment
        (?)
        (0.0,0.0) (0.5,0.0) (1.0,0.0)
        (0.0,0.5) (0.5,0.5) (1.0,0.5)
        (0.0,1.0) (0.5,1.0) (1.0,1.0)
> Text Input
    > Multi-line Text Input
        (?)
        [ ]
        ImGuiInputTextFlags_ReadOnly
        [x]
        ImGuiInputTextFlags_AllowTabInput
        [ ]
        ImGuiInputTextFlags_CtrlEnterForNewLine
    > Filtered Text Input
        default
        decimal
        hexadecimal
        uppercase
        no blank
        "imgui" letters
        Password input
        password (?)
        password (w/ hint)
        password123 password (clear)
    > Resize Callback
        (?)
        Data: 085D6FC8
        Size: 1
        Capacity: 8
> Plots Widgets
    [x]
    Animate
    Frame Times
    avg 0.000000 Lines
    Histogram
    --------------------------------
    Sin func 70
    Sample count
    Lines
    Histogram
    --------------------------------
    1%
    Progress Bar
    11/1753
> Color/Picker Widgets
    [x]
    With Alpha Preview
    [ ]
    With Half Alpha Preview
    [x]
    With Drag and Drop
    [x]
    With Options Menu (?)
    [ ]
    With HDR (?)
    Color widget: (?)
    R:114 G:144 B:154
    MyColor
    Color widget HSV with Alpha:
    H:138 S: 66 V:154 A:200
    MyColor
    Color widget with Float Display:
    R:0.447 G:0.565 B:0.604 A:0.784
    MyColor
    Color button with Picker: (?)
    Color button with Custom Picker Popup:
    Palette
    Color button only:
    [ ]
    ImGuiColorEditFlags_NoBorder
    Color picker:
    [x]
    With Alpha
    [x]
    With Alpha Bar
    [x]
    With Side Preview [ ]
    With Ref Color
    Auto/Current Display Mode (?)
    Auto/Current Picker Mode (?)
    MyColor
    R:114 G:144 B:154 A:200
    H:138 S: 66 V:154 A:200
    #72909AC8
    Programmatically set defaults: (?)
    Default: Uint8 + HSV + Hue Bar
    Default: Float + HDR + Hue Wheel
    HSV encoded colors (?)
    Color widget with InputHSV:
    R:0.620 G:1.000 B:0.000 A:1.000
    HSV shown as RGB
    H:0.230 S:1.000 V:1.000 A:1.000
    HSV shown as HSV
    0.230 1.000 1.000 1.000
    Raw HSV values
> Range Widgets
    Min: 10.0 % Max: 90.0 %
    range
    Min: 100 units Max: 1000 units
    range int (no bounds)
> Data Types
    Drags:
    [ ]
    Clamp integers to 0..50 (?)
    127
    drag s8
    255 ms
    drag u8
    32767
    drag s16
    65535 ms
    drag u16
    -1
    drag s32
    4294967295 ms
    drag u32
    -1
    drag s64
    18446744073709551615
    drag u64
    0.123000
    drag float
    0.123000
    drag float ^2 (?)
    90000.0123456789 grams
    drag double
    0 < 90000.0123456789 < 1
    drag double ^2
    Sliders
    127
    slider s8 full
    255
    slider u8 full
    32767
    slider s16 full
    65535
    slider u16 full
    -1
    slider s32 low
    -1
    slider s32 high
    -1
    slider s32 full
    4294967295
    slider u32 low
    4294967295
    slider u32 high
    4294967295
    slider u32 full
    -1
    slider s64 low
    -1
    slider s64 high
    -1
    slider s64 full
    18446744073709551615 ms
    slider u64 low
    18446744073709551615 ms
    slider u64 high
    18446744073709551615 ms
    slider u64 full
    0.123000
    slider float low
    0.1230000034
    slider float low^2
    1.230000e-01
    slider float high
    90000.0123456789 grams
    slider double low
    90000.0123456789
    slider double low^2
    9.000001e+04 grams
    slider double high
    Inputs
    [x]
    Show step buttons
    127 - + input s8
    255 - + input u8
    32767 - + input s16
    65535 - + input u16
    -1 - + input s32
    FFFFFFFF - + input s32 hex
    4294967295 - + input u32
    FFFFFFFF - + input u32 hex
    -1 - + input s64
    18446744073709551615 - + input u64
    0.123000 - + input float
    90000.012346 - + input double
> Multi-component Widgets
    0.100 0.200 input float2
    0.100 0.200
    drag float2
    0.100 0.200
    slider float2
    1 5 input int2
    1 5
    drag int2
    1 5
    slider int2
    0.100 0.200 0.300 input float3
    0.100 0.200 0.300
    drag float3
    0.100 0.200 0.300
    slider float3
    1 5 100 input int3
    1 5 100
    drag int3
    1 5 100
    slider int3
    0.100 0.200 0.300 0.440 input float4
    0.100 0.200 0.300 0.440
    drag float4
    0.100 0.200 0.300 0.440
    slider float4
    1 5 100 255 input int4
    1 5 100 255
    drag int4
    1 5 100 255
    slider int4
> Vertical Sliders
    0
    0.00
    sec 0.60
    sec 0.35
    sec 0.90
    sec
> Drag and Drop
    > Drag and drop in standard widgets
        (?)
        R:255 G:  0 B: 51
        color 1
        R:102 G:179 B:  0 A:128
        color 2
    > Drag and drop to copy/swap items
        (x)
        Copy ( )
        Move ( )
        Swap
        Bobby Beatrice Betty
        Brianna Barry Bernard
        Bibi Blaine Bryn
    > Drag to reorder items (simple)
        (?)
        Item One
        Item Two
        Item Three
        Item Four
        Item Five
> Querying Status (Active/Focused/Hovered etc.)
    Button Item Type (?)
    ITEM: Button
    Return value = 0
    IsItemFocused() = 0
    IsItemHovered() = 0
    IsItemHovered(_AllowWhenBlockedByPopup) = 0
    IsItemHovered(_AllowWhenBlockedByActiveItem) = 0
    IsItemHovered(_AllowWhenOverlapped) = 0
    IsItemHovered(_RectOnly) = 0
    IsItemActive() = 0
    IsItemEdited() = 0
    IsItemActivated() = 0
    IsItemDeactivated() = 0
    IsItemDeactivatedAfterEdit() = 0
    IsItemVisible() = 0
    IsItemClicked() = 0
    IsItemToggledOpen() = 0
    GetItemRectMin() = (28.0, 8815.0)
    GetItemRectMax() = (120.0, 8834.0)
    GetItemRectSize() = (92.0, 19.0)
    [ ]
    Embed everything inside a child window (for additional testing)
    IsWindowFocused() = 1
    IsWindowFocused(_ChildWindows) = 1
    IsWindowFocused(_ChildWindows|_RootWindow) = 1
    IsWindowFocused(_RootWindow) = 1
    IsWindowFocused(_AnyWindow) = 1

    IsWindowHovered() = 1
    IsWindowHovered(_AllowWhenBlockedByPopup) = 1
    IsWindowHovered(_AllowWhenBlockedByActiveItem) = 1
    IsWindowHovered(_ChildWindows) = 1
    IsWindowHovered(_ChildWindows|_RootWindow) = 1
    IsWindowHovered(_ChildWindows|_AllowWhenBlockedByPopup) = 1
    IsWindowHovered(_RootWindow) = 1
    IsWindowHovered(_AnyWindow) = 1

    This is a dummy field to be able to tab-out of the widgets above. dummy
    [ ]
    Hovered/Active tests after Begin() for title bar testing

## Layout ##
> Child windows
    (?)
    [ ]
    Disable Mouse Wheel
    [ ]
    Disable Menu
    Goto 50
    --------------------------------
    Rect of child window is: (38,9770) (238,9870)
> Widgets Width
    SetNextItemWidth/PushItemWidth(100) (?)
    0.000
    float
    SetNextItemWidth/PushItemWidth(GetWindowWidth() * 0.5f) (?)
    0.000
    float
    SetNextItemWidth/PushItemWidth(GetContentRegionAvail().x * 0.5f) (?)
    0.000
    float
    SetNextItemWidth/PushItemWidth(-100) (?)
    0.000
    float
    SetNextItemWidth/PushItemWidth(-1) (?)
    0.000
    0.000
    0.000
> Basic Horizontal Layout
    (Use ImGui::SameLine() to keep adding items to the right of the preceding item)
    Two items: Hello Sailor
    More spacing: Hello Sailor
    Normal buttons Banana Apple Corniflower
    Small buttons Like this one can fit within a text block.
    Aligned x=150 x=300
    Aligned x=150 x=300
    [ ]
    My [ ]
    Tailor [ ]
    Is [ ]
    Rich
    Combo 1.000
    X 2.000
    Y 3.000
    Z
    Lists:
    A B
    Manually wrapping:
    Box Box Box Box Box Box Box Box Box Box
    Box Box Box Box Box Box Box Box Box Box
> Tabs
    > Basic
        This is the Avocado tab!
        blah blah blah blah blah
        --------------------------------
    > Advanced & Close Button
        [x]
        ImGuiTabBarFlags_Reorderable
        [ ]
        ImGuiTabBarFlags_AutoSelectNewTabs
        [ ]
        ImGuiTabBarFlags_TabListPopupButton
        [ ]
        ImGuiTabBarFlags_NoCloseWithMiddleMouseButton
        [x]
        ImGuiTabBarFlags_FittingPolicyResizeDown
        [ ]
        ImGuiTabBarFlags_FittingPolicyScroll
        [x]
        Artichoke [x]
        Beetroot [x]
        Celery [x]
        Daikon
        This is the Artichoke tab!
        --------------------------------
> Groups
    (?)
    AAA BBB
    CCC
    DDD
    EEE
    ACTION REACTION
    LEVERAGE
    BUZZWORD
> Text Baseline Alignment
    Text baseline: (?)
    KO Blahblah
    Some framed item (?)
    OK Blahblah Some framed item (?)
    TEST TEST TEST
    Text aligned to framed item Item Item Item Item
    Multi-line text:
    One
    Two
    Three Hello
    World Banana
    Banana Hello
    World One
    Two
    Three
    HOP Banana Hello
    World Banana
    HOP Hello
    World Banana
    Misc items:
    80x80 50x50 Button() SmallButton()
    Button > Node
        Item 0..
        Item 1..
        Item 2..
        Item 3..
        Item 4..
        Item 5..
    > Node Button
        Item 0..
        Item 1..
        Item 2..
        Item 3..
        Item 4..
        Item 5..
    Button Bullet text
    Node Button
> Scrolling
    (?)
    [ ]
    Decoration (?)
    [x]
    Track Item = 50
    Scroll Offset +0 px
    Scroll To Pos X/Y = 200 px
    Top
    0/0
    25%
    0/0
    Center
    0/0
    75%
    0/0
    Bottom
    0/0
    (?)
    Left
    0/0
    25%
    0/0
    Center
    0/0
    75%
    0/0
    Right
    0/0
    (?)
    7
    Lines
    << Scroll from code >> 0/0
    [ ]
    Show Horizontal contents size demo window
> Clipping
    On a per-widget basis we are occasionally clipping text CPU-side if it won't fit in its frame. Otherwise we are doing coarser clipping + passing a scissor rectangle to the renderer. The system is designed to try minimizing both execution and CPU/GPU rendering cost.
    100 100
    size
    (Click and drag)

## Popups & Modal windows ##
> Popups
    When a popup is active, it inhibits interacting with windows that are behind the popup. Clicking outside the popup closes it.
    Select.. <None>
    Toggle..
    File Menu..
> Context menus
    Value = 0.500 (<-- right-click here)
    (You can also right-click me to open the same popup as above.)
    Button: Label1 (<-- right-click here)
> Modals
    Modal windows are like popups but the user cannot close them by clicking outside the window.
    Delete..
    Stacked modals..
> Menus inside a regular window
    Below we are testing adding menu items to a regular window. It's rather unusual but should work!
    --------------------------------
    Menu item CTRL+M
    Menu inside a regular window
    --------------------------------

## Columns ##
[ ]
Disable tree indentation (?)
> Basic
    Without border:
    --------------------------------
    Item 0 Item 1 Item 2
    Item 3 Item 4 Item 5
    Item 6 Item 7 Item 8
    Item 9 Item 10 Item 11
    Item 12 Item 13
    --------------------------------
    With border:
    --------------------------------
    ID Name Path Hovered
    --------------------------------
    0000 One /path/one 0
    0001 Two /path/two 0
    0002 Three /path/three 0
    --------------------------------
> Borders
    4 columns [x]
    horizontal [x]
    vertical
    --------------------------------
    aaa
    Width 131.25
    Avail 115.25
    Offset 21.00
    Long text that is likely to clip
    Button bbb
    Width 131.25
    Avail 115.50
    Offset 152.25
    Long text that is likely to clip
    Button ccc
    Width 131.25
    Avail 115.75
    Offset 283.50
    Long text that is likely to clip
    Button ddd
    Width 131.25
    Avail 116.00
    Offset 414.75
    Long text that is likely to clip
    Button
    --------------------------------
    eee
    Width 131.25
    Avail 115.25
    Offset 21.00
    Long text that is likely to clip
    Button fff
    Width 131.25
    Avail 115.50
    Offset 152.25
    Long text that is likely to clip
    Button ggg
    Width 131.25
    Avail 115.75
    Offset 283.50
    Long text that is likely to clip
    Button hhh
    Width 131.25
    Avail 116.00
    Offset 414.75
    Long text that is likely to clip
    Button
    --------------------------------
    iii
    Width 131.25
    Avail 115.25
    Offset 21.00
    Long text that is likely to clip
    Button jjj
    Width 131.25
    Avail 115.50
    Offset 152.25
    Long text that is likely to clip
    Button kkk
    Width 131.25
    Avail 115.75
    Offset 283.50
    Long text that is likely to clip
    Button lll
    Width 131.25
    Avail 116.00
    Offset 414.75
    Long text that is likely to clip
    Button
    --------------------------------
> Mixed items
    --------------------------------
    Hello
    Banana ImGui
    Apple
    1.000 - + red
    An extra line here. Sailor
    Corniflower
    1.000 - + blue
    
    ## Category A ## 
    ## Category B ## 
    ## Category C ##
    --------------------------------
> Word-wrapping
    --------------------------------
    The quick brown fox jumps over the lazy dog.
    Hello Left The quick brown fox jumps over the lazy dog.
    Hello Right
    --------------------------------
> Horizontal Scrolling
> Tree
    > Node0 Node contents
        > Node0.0 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
        > Node0.1 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
        > Node0.2 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
    > Node1 Node contents
        > Node1.0 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
        > Node1.1 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
        > Node1.2 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
    > Node2 Node contents
        > Node2.0 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
        > Node2.1 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog
        > Node2.2 Node contents
            Even more contents
            > Tree in column
                The quick brown fox jumps over the lazy dog

## Filtering ##
Filter usage:
  ""         display all lines
  "xxx"      display lines containing "xxx"
  "xxx,yyy"  display lines containing "xxx" or "yyy"
  "-xxx"     hide lines containing "xxx"
Filter (inc,-exc)
aaa1.c
bbb1.c
ccc1.c
aaa2.cpp
bbb2.cpp
ccc2.cpp
abc.h
hello, world

## Inputs, Navigation & Focus ##
WantCaptureMouse: 1
WantCaptureKeyboard: 1
WantTextInput: 0
WantSetMousePos: 0
NavActive: 0, NavVisible: 0
> Keyboard, Mouse & Navigation State
    Mouse pos: (186, 391)
    Mouse delta: (0, 0)
    Mouse down:
    Mouse clicked:
    Mouse dbl-clicked:
    Mouse released: b0
    Mouse wheel: 0.0
    Keys down:
    Keys pressed:
    Keys release:
    Keys mods: 
    Chars queue:
    NavInputs down:
    NavInputs pressed:
    NavInputs duration:
    Hovering me sets the
    keyboard capture flag Holding me clears the
    the keyboard capture flag
> Tabbing
    Use TAB/SHIFT+TAB to cycle through keyboard editable fields.
    dummy 1
    dummy 2
    dummy 3
    dummy 4 (tab skip)
    dummy 5
> Focus from code
    Focus on 1 Focus on 2 Focus on 3
    click on a button to set focus 1
    click on a button to set focus 2
    click on a button to set focus 3 (tab skip)
    Item with focus: <none>
    Focus on X Focus on Y Focus on Z
    0.000 0.000 0.000
    Float3
    NB: Cursor & selection are preserved when refocusing last used item in code.
> Dragging
    You can use ImGui::GetMouseDragDelta(0) to query for the dragged amount on any widget.
    IsMouseDragging(0):
      w/ default threshold: 0,
      w/ zero threshold: 0
      w/ large threshold: 0
    IsMouseDragging(1):
      w/ default threshold: 0,
      w/ zero threshold: 0
      w/ large threshold: 0
    IsMouseDragging(2):
      w/ default threshold: 0,
      w/ zero threshold: 0
      w/ large threshold: 0
    Drag Me
    GetMouseDragDelta(0):
      w/ default threshold: (0.0, 0.0),
      w/ zero threshold: (0.0, 0.0)
    MouseDelta: (0.0, 0.0)
> Mouse cursors
    Current mouse cursor = 0: Arrow
    Hover to see mouse cursors: (?)
    Mouse cursor 0: Arrow
    Mouse cursor 1: TextInput
    Mouse cursor 2: ResizeAll
    Mouse cursor 3: ResizeNS
    Mouse cursor 4: ResizeEW
    Mouse cursor 5: ResizeNESW
    Mouse cursor 6: ResizeNWSE
    Mouse cursor 7: Hand
    Mouse cursor 8: NotAllowed
